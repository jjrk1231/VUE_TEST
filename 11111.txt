프로퍼티 어트리뷰트
렉시컬 환경
스코프
일급 객체
정적 메서드
프로토타입 메서드
클래스 인스턴스
큐 스택

﻿lexical this

https://velog.io/@kimhscom/JavaScript-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-ES6-%EB%AC%B8%EB%B2%95-%EC%A0%95%EB%A6%AC


프로퍼티 vs 메서드

객체는 프로퍼티로 구성되며 프로퍼티는 키와 값으로 구성
프로퍼티가 함수일 경우 이를 메소드라 함

클래스 내부에 만드는 변수를 프로퍼티 라고 부름. (멤버변수 라고도 함)
프로퍼티에는 주로 객체 내부에서 사용하는 일반적인 정보와
객체 내부 함수(메서드) 에서 처리한 결과값이 저장.

부수효과(사이드 이펙트)
1+1 2

'1'+1 = 11

삼항 조건 연산자

객체 리터럴

텐츠를 그대로 대입하는 방법을 말한
위의 person 객체에서 bio와 greeting은 함수이다.
 객체는 property로 일반 변수 뿐만 아니라 함수 또한 가질 수 있다.

객체에 묶인 함수는 메서드라고 표현한다.

얕은 복사 깊은복사

식 문

super의 두가지 용법
1. super(): 부모-class의 생성자(constructor)를 참조한다.
2. super.method() : 부모-class의 prototype-method를 참조한다.

super의 기술적 의미
-> 상속된(자식) class에 요소 추가 시 새로 추가되는 parameter를 정의하려면
기존(부모)-class constructor를 다시 정의해 주어야 한다.
이 과정에서 생기는 중복되는 코드가 발생해, error발생 확률 증가, 메모리 낭비 등 매우 비효율적인 낭비가 생긴다.
이러한 부분을 super로 해결할 수 있다

super는 부모 클래스의 내용이 자식 클래스에도 비효율적으로 중복 존재하고 있을 때 그 내용을 치우고 대신 들어가는 키워드이다.

super()로 부모 클래스의 생성자(constructor)에 접근한다. 객체 공장의 객체 찍어내는 기계를 일일이 똑같이 하나 더 제조할 필요 없이 복제 빔을 쏴서 하나 더 만든다고 생각하면 된다. 더 필요한 기능이 있으면 복제본에 추가하면 된다.

super.method로 부모 클래스의 메서드를 가져다 쓸 수 있다. 복제 빔을 쏴서 만든 복제본에 원본의 부품 일부만을 꺼내다가 장착하고 싶을 때 쓴다.

super가 없다면 객체 찍어내는 공장의 생산 효율이 굉장히 떨어질 것이다. super는 객체 공장의 복제 빔이다. 복제 빔 없는 객체 공장은 상상도 할 수 없다.